const morseDictionary = {
  '.-': 'a',
  '-...': 'b',
  '-.-.': 'c',
  '-..': 'd',
  '.': 'e',
  '..-.': 'f',
  '--.': 'g',
  '....': 'h',
  '..': 'i',
  '.---': 'j',
  '-.-': 'k',
  '.-..': 'l',
  '--': 'm',
  '-.': 'n',
  '---': 'o',
  '.--.': 'p',
  '--.-': 'q',
  '.-.': 'r',
  '...': 's',
  '-': 't',
  '..-': 'u',
  '...-': 'v',
  '.--': 'w',
  '-..-': 'x',
  '-.--': 'y',
  '--..': 'z'
}
 
function decode(code) {
  const sentence = code
    .split(' ') // split for each chunk
    .map(code => { // Binary to Ascii
      return String.fromCharCode(parseInt(code, 2).toString(10));
    })
    .join('').split(' ')
    .map(morse => { // swap Morse to letter
      return morseDictionary[morse];
    })
    .join('')
    .replace(/[a-zA-Z]/g, character => { // ROT3
      return String.fromCharCode((character <= "Z" ? 90 : 122) >= (character = character.charCodeAt(0) + 3) ? character : character - 26);
    });
 
    console.log(sentence);
}
 
decode